@page "/syncfusion"
@rendermode InteractiveServer
@using BlazorServerSyncfusion.Interfaces
@using BlazorServerSyncfusion.Services
@using BlazorServerSyncfusion.Models
@using Syncfusion.Blazor.Charts
@inject IDatabase<TdmsFile> TdmsFileService

<PageTitle>SyncfusionChart</PageTitle>
<h3>SyncfusionChart</h3>

@if (files != null && files.Count > 0)
{
    var file = files[0]; // 첫 번째 파일 사용
    var fileService = TdmsFileService as TdmsFileService;
    if (fileService != null)
    {
        var chartData = fileService.ConvertToChartData(file.Data);
        <SfChart Title="@file.FileName">
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Double"></ChartPrimaryXAxis> <!-- X축 ValueType 설정 -->
            <ChartPrimaryYAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Double"></ChartPrimaryYAxis> <!-- Y축 ValueType 설정 -->
            <ChartSeriesCollection>
                <ChartSeries DataSource="@chartData"
                             XName="Time" YName="Value" Type="ChartSeriesType.Line">
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    }
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    private List<TdmsFile> files;

    protected override async Task OnInitializedAsync()
    {
        files = await TdmsFileService.GetAsync();
    }
}